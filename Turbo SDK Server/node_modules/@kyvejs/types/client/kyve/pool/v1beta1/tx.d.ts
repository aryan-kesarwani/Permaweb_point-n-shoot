import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
export declare const protobufPackage = "kyve.pool.v1beta1";
/** MsgCreatePool defines a SDK message for creating a new pool. */
export interface MsgCreatePool {
    /** authority is the address of the governance account. */
    authority: string;
    /** name ... */
    name: string;
    /** runtime ... */
    runtime: string;
    /** logo ... */
    logo: string;
    /** config ... */
    config: string;
    /** start_key ... */
    start_key: string;
    /** upload_interval ... */
    upload_interval: string;
    /** inflation_share_weight ... */
    inflation_share_weight: string;
    /** min_delegation ... */
    min_delegation: string;
    /** max_bundle_size ... */
    max_bundle_size: string;
    /** version ... */
    version: string;
    /** binaries ... */
    binaries: string;
    /** storage_provider_id ... */
    storage_provider_id: number;
    /** compression_id ... */
    compression_id: number;
    /** end_key ... */
    end_key: string;
}
/** MsgCreatePoolResponse defines the Msg/CreatePool response type. */
export interface MsgCreatePoolResponse {
}
/** MsgUpdatePool defines a SDK message for updating an existing pool. */
export interface MsgUpdatePool {
    /** authority is the address of the governance account. */
    authority: string;
    /** id ... */
    id: string;
    /** payload ... */
    payload: string;
}
/** MsgUpdatePoolResponse defines the Msg/UpdatePool response type. */
export interface MsgUpdatePoolResponse {
}
/** MsgDisablePool defines a SDK message for disabling an existing pool. */
export interface MsgDisablePool {
    /** authority is the address of the governance account. */
    authority: string;
    /** id ... */
    id: string;
}
/** MsgDisablePoolResponse defines the Msg/DisablePool response type. */
export interface MsgDisablePoolResponse {
}
/** MsgEnablePool defines a SDK message for enabling an existing pool. */
export interface MsgEnablePool {
    /** authority is the address of the governance account. */
    authority: string;
    /** id ... */
    id: string;
}
/** MsgEnablePoolResponse defines the Msg/EnablePool response type. */
export interface MsgEnablePoolResponse {
}
/** MsgScheduleRuntimeUpgrade defines a SDK message for scheduling a runtime upgrade. */
export interface MsgScheduleRuntimeUpgrade {
    /** authority is the address of the governance account. */
    authority: string;
    /** runtime ... */
    runtime: string;
    /** version ... */
    version: string;
    /** scheduled_at ... */
    scheduled_at: string;
    /** duration ... */
    duration: string;
    /** binaries ... */
    binaries: string;
}
/** MsgScheduleRuntimeUpgradeResponse defines the Msg/ScheduleRuntimeUpgrade response type. */
export interface MsgScheduleRuntimeUpgradeResponse {
}
/** MsgCancelRuntimeUpgrade defines a SDK message for cancelling a runtime upgrade. */
export interface MsgCancelRuntimeUpgrade {
    /** authority is the address of the governance account. */
    authority: string;
    /** runtime ... */
    runtime: string;
}
/** MsgCancelRuntimeUpgradeResponse defines the Msg/CancelRuntimeUpgrade response type. */
export interface MsgCancelRuntimeUpgradeResponse {
}
/** MsgUpdateParams defines a SDK message for updating the module parameters. */
export interface MsgUpdateParams {
    /** authority is the address of the governance account. */
    authority: string;
    /** payload defines the x/stakers parameters to update. */
    payload: string;
}
/** MsgUpdateParamsResponse defines the Msg/UpdateParams response type. */
export interface MsgUpdateParamsResponse {
}
export declare const MsgCreatePool: MessageFns<MsgCreatePool>;
export declare const MsgCreatePoolResponse: MessageFns<MsgCreatePoolResponse>;
export declare const MsgUpdatePool: MessageFns<MsgUpdatePool>;
export declare const MsgUpdatePoolResponse: MessageFns<MsgUpdatePoolResponse>;
export declare const MsgDisablePool: MessageFns<MsgDisablePool>;
export declare const MsgDisablePoolResponse: MessageFns<MsgDisablePoolResponse>;
export declare const MsgEnablePool: MessageFns<MsgEnablePool>;
export declare const MsgEnablePoolResponse: MessageFns<MsgEnablePoolResponse>;
export declare const MsgScheduleRuntimeUpgrade: MessageFns<MsgScheduleRuntimeUpgrade>;
export declare const MsgScheduleRuntimeUpgradeResponse: MessageFns<MsgScheduleRuntimeUpgradeResponse>;
export declare const MsgCancelRuntimeUpgrade: MessageFns<MsgCancelRuntimeUpgrade>;
export declare const MsgCancelRuntimeUpgradeResponse: MessageFns<MsgCancelRuntimeUpgradeResponse>;
export declare const MsgUpdateParams: MessageFns<MsgUpdateParams>;
export declare const MsgUpdateParamsResponse: MessageFns<MsgUpdateParamsResponse>;
/** Msg defines the Msg service. */
export interface Msg {
    /**
     * CreatePool defines a governance operation for creating a new pool.
     * The authority is hard-coded to the x/gov module account.
     */
    CreatePool(request: MsgCreatePool): Promise<MsgCreatePoolResponse>;
    /**
     * UpdatePool defines a governance operation for updating an existing pool.
     * The authority is hard-coded to the x/gov module account.
     */
    UpdatePool(request: MsgUpdatePool): Promise<MsgUpdatePoolResponse>;
    /**
     * DisablePool defines a governance operation for disabling an existing pool.
     * The authority is hard-coded to the x/gov module account.
     */
    DisablePool(request: MsgDisablePool): Promise<MsgDisablePoolResponse>;
    /**
     * EnablePool defines a governance operation for enabling an existing pool.
     * The authority is hard-coded to the x/gov module account.
     */
    EnablePool(request: MsgEnablePool): Promise<MsgEnablePoolResponse>;
    /**
     * ScheduleRuntimeUpgrade defines a governance operation for scheduling a runtime upgrade.
     * The authority is hard-coded to the x/gov module account.
     */
    ScheduleRuntimeUpgrade(request: MsgScheduleRuntimeUpgrade): Promise<MsgScheduleRuntimeUpgradeResponse>;
    /**
     * CancelRuntimeUpgrade defines a governance operation for cancelling a runtime upgrade.
     * The authority is hard-coded to the x/gov module account.
     */
    CancelRuntimeUpgrade(request: MsgCancelRuntimeUpgrade): Promise<MsgCancelRuntimeUpgradeResponse>;
    /**
     * UpdateParams defines a governance operation for updating the x/pool module
     * parameters. The authority is hard-coded to the x/gov module account.
     */
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
}
export declare const MsgServiceName = "kyve.pool.v1beta1.Msg";
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    CreatePool(request: MsgCreatePool): Promise<MsgCreatePoolResponse>;
    UpdatePool(request: MsgUpdatePool): Promise<MsgUpdatePoolResponse>;
    DisablePool(request: MsgDisablePool): Promise<MsgDisablePoolResponse>;
    EnablePool(request: MsgEnablePool): Promise<MsgEnablePoolResponse>;
    ScheduleRuntimeUpgrade(request: MsgScheduleRuntimeUpgrade): Promise<MsgScheduleRuntimeUpgradeResponse>;
    CancelRuntimeUpgrade(request: MsgCancelRuntimeUpgrade): Promise<MsgCancelRuntimeUpgradeResponse>;
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export interface MessageFns<T> {
    encode(message: T, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): T;
    fromJSON(object: any): T;
    toJSON(message: T): unknown;
    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
export {};
