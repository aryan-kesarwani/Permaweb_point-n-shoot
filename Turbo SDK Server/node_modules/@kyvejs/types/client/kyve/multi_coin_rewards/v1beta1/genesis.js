"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: kyve/multi_coin_rewards/v1beta1/genesis.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
var wire_1 = require("@bufbuild/protobuf/wire");
var params_1 = require("./params");
var types_1 = require("./types");
exports.protobufPackage = "kyve.multi_coin_rewards.v1beta1";
function createBaseGenesisState() {
    return {
        params: undefined,
        multi_coin_pending_rewards_entries: [],
        queue_state_pending_rewards: undefined,
        multi_coin_enabled: [],
        multi_coin_distribution_policy: undefined,
    };
}
exports.GenesisState = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(10).fork()).join();
        }
        for (var _i = 0, _a = message.multi_coin_pending_rewards_entries; _i < _a.length; _i++) {
            var v = _a[_i];
            types_1.MultiCoinPendingRewardsEntry.encode(v, writer.uint32(18).fork()).join();
        }
        if (message.queue_state_pending_rewards !== undefined) {
            types_1.QueueState.encode(message.queue_state_pending_rewards, writer.uint32(26).fork()).join();
        }
        for (var _b = 0, _c = message.multi_coin_enabled; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.uint32(34).string(v);
        }
        if (message.multi_coin_distribution_policy !== undefined) {
            types_1.MultiCoinDistributionPolicy.encode(message.multi_coin_distribution_policy, writer.uint32(42).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGenesisState();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.multi_coin_pending_rewards_entries.push(types_1.MultiCoinPendingRewardsEntry.decode(reader, reader.uint32()));
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.queue_state_pending_rewards = types_1.QueueState.decode(reader, reader.uint32());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.multi_coin_enabled.push(reader.string());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.multi_coin_distribution_policy = types_1.MultiCoinDistributionPolicy.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            params: isSet(object.params) ? params_1.Params.fromJSON(object.params) : undefined,
            multi_coin_pending_rewards_entries: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.multi_coin_pending_rewards_entries)
                ? object.multi_coin_pending_rewards_entries.map(function (e) { return types_1.MultiCoinPendingRewardsEntry.fromJSON(e); })
                : [],
            queue_state_pending_rewards: isSet(object.queue_state_pending_rewards)
                ? types_1.QueueState.fromJSON(object.queue_state_pending_rewards)
                : undefined,
            multi_coin_enabled: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.multi_coin_enabled)
                ? object.multi_coin_enabled.map(function (e) { return globalThis.String(e); })
                : [],
            multi_coin_distribution_policy: isSet(object.multi_coin_distribution_policy)
                ? types_1.MultiCoinDistributionPolicy.fromJSON(object.multi_coin_distribution_policy)
                : undefined,
        };
    },
    toJSON: function (message) {
        var _a, _b;
        var obj = {};
        if (message.params !== undefined) {
            obj.params = params_1.Params.toJSON(message.params);
        }
        if ((_a = message.multi_coin_pending_rewards_entries) === null || _a === void 0 ? void 0 : _a.length) {
            obj.multi_coin_pending_rewards_entries = message.multi_coin_pending_rewards_entries.map(function (e) {
                return types_1.MultiCoinPendingRewardsEntry.toJSON(e);
            });
        }
        if (message.queue_state_pending_rewards !== undefined) {
            obj.queue_state_pending_rewards = types_1.QueueState.toJSON(message.queue_state_pending_rewards);
        }
        if ((_b = message.multi_coin_enabled) === null || _b === void 0 ? void 0 : _b.length) {
            obj.multi_coin_enabled = message.multi_coin_enabled;
        }
        if (message.multi_coin_distribution_policy !== undefined) {
            obj.multi_coin_distribution_policy = types_1.MultiCoinDistributionPolicy.toJSON(message.multi_coin_distribution_policy);
        }
        return obj;
    },
    create: function (base) {
        return exports.GenesisState.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGenesisState();
        message.params = (object.params !== undefined && object.params !== null)
            ? params_1.Params.fromPartial(object.params)
            : undefined;
        message.multi_coin_pending_rewards_entries =
            ((_a = object.multi_coin_pending_rewards_entries) === null || _a === void 0 ? void 0 : _a.map(function (e) { return types_1.MultiCoinPendingRewardsEntry.fromPartial(e); })) || [];
        message.queue_state_pending_rewards =
            (object.queue_state_pending_rewards !== undefined && object.queue_state_pending_rewards !== null)
                ? types_1.QueueState.fromPartial(object.queue_state_pending_rewards)
                : undefined;
        message.multi_coin_enabled = ((_b = object.multi_coin_enabled) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.multi_coin_distribution_policy =
            (object.multi_coin_distribution_policy !== undefined && object.multi_coin_distribution_policy !== null)
                ? types_1.MultiCoinDistributionPolicy.fromPartial(object.multi_coin_distribution_policy)
                : undefined;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=genesis.js.map