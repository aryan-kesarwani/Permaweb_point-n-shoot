import { StdFee } from "@cosmjs/amino/build/signdoc";
import { KyveSigning, PendingTx } from "../../../signing";
import { MsgBeginRedelegate, MsgCancelUnbondingDelegation, MsgCreateValidator, MsgDelegate, MsgEditValidator, MsgUndelegate } from "cosmjs-types/cosmos/staking/v1beta1/tx";
export default class CosmosStakingMethods extends KyveSigning {
    delegate(value: Omit<MsgDelegate, "delegatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    undelegate(value: Omit<MsgUndelegate, "delegatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    cancelUnbonding(value: Omit<MsgCancelUnbondingDelegation, "delegatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    redelegate(value: Omit<MsgBeginRedelegate, "delegatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    createValidator(value: Omit<MsgCreateValidator, "validatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    editValidator(value: Omit<MsgEditValidator, "validatorAddress">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
}
